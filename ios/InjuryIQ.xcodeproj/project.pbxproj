// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 90;
	objects = {

/* Begin PBXBuildFile section */
		06AE9E302E686A9A00EE0892 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 06AE9E2F2E686A9A00EE0892 /* GoogleService-Info.plist */; };
		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3049B9996A8B50742998DF45 /* PrivacyInfo.xcprivacy in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB81A68108700A75B9A /* PrivacyInfo.xcprivacy */; };
		761780ED2CA45674006654EE /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 761780EC2CA45674006654EE /* AppDelegate.swift */; };
		81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		D4085C910F877D8285EE7425 /* Pods_InjuryIQ.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = BDF01B1AB67DB8D5688BB75B /* Pods_InjuryIQ.framework */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		05D456A85B204E82AB84B3A0 /* FontAwesome6_Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome6_Regular.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Regular.ttf"; sourceTree = "<group>"; };
		0650B5372E71842800DC2AD4 /* InjuryIQ.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = InjuryIQ.entitlements; path = InjuryIQ/InjuryIQ.entitlements; sourceTree = "<group>"; };
		069DC4782E940DB800EE9E1E /* ci_pre_xcodebuild.sh */ = {isa = PBXFileReference; lastKnownFileType = text.script.sh; path = ci_pre_xcodebuild.sh; sourceTree = "<group>"; };
		069DC4792E94204E00EE9E1E /* ci_post_clone.sh */ = {isa = PBXFileReference; lastKnownFileType = text.script.sh; path = ci_post_clone.sh; sourceTree = "<group>"; };
		06AE9E2F2E686A9A00EE0892 /* GoogleService-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		1154A09F964A490B9E1E6AF5 /* MaterialCommunityIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialCommunityIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf"; sourceTree = "<group>"; };
		13B07F961A680F5B00A75B9A /* InjuryIQ.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = InjuryIQ.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = InjuryIQ/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = InjuryIQ/Info.plist; sourceTree = "<group>"; };
		13B07FB81A68108700A75B9A /* PrivacyInfo.xcprivacy */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = PrivacyInfo.xcprivacy; path = InjuryIQ/PrivacyInfo.xcprivacy; sourceTree = "<group>"; };
		16707BBDA3F24A71BE50288D /* FontAwesome6_Brands.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome6_Brands.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Brands.ttf"; sourceTree = "<group>"; };
		23437A402186427F90448F71 /* AntDesign.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = AntDesign.ttf; path = "../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf"; sourceTree = "<group>"; };
		2894D2E5AA0E4D838FF64477 /* Feather.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Feather.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Feather.ttf"; sourceTree = "<group>"; };
		55BF79578E304A26B1764A71 /* FontAwesome6_Solid.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome6_Solid.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Solid.ttf"; sourceTree = "<group>"; };
		5966DCF2F0ED4A48B17D592F /* Fontisto.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Fontisto.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf"; sourceTree = "<group>"; };
		62294D02248885BB03499D75 /* Pods-InjuryIQ.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-InjuryIQ.debug.xcconfig"; path = "Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ.debug.xcconfig"; sourceTree = "<group>"; };
		67A368024CC24AA6BF75C97F /* FontAwesome5_Solid.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Solid.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf"; sourceTree = "<group>"; };
		71B1F17B5A284FA2B89CE72B /* Entypo.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Entypo.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Entypo.ttf"; sourceTree = "<group>"; };
		761780EC2CA45674006654EE /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = InjuryIQ/AppDelegate.swift; sourceTree = "<group>"; };
		7FE4D937676241EEAD0D925F /* FontAwesome5_Brands.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Brands.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf"; sourceTree = "<group>"; };
		81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = LaunchScreen.storyboard; path = InjuryIQ/LaunchScreen.storyboard; sourceTree = "<group>"; };
		81D4326968AB41F096AF8235 /* FontAwesome5_Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Regular.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf"; sourceTree = "<group>"; };
		95737EA8F94D4E36820B8F5B /* Foundation.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Foundation.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Foundation.ttf"; sourceTree = "<group>"; };
		BA7B476F4B84406A89CF2222 /* Octicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Octicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Octicons.ttf"; sourceTree = "<group>"; };
		BDF01B1AB67DB8D5688BB75B /* Pods_InjuryIQ.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Pods_InjuryIQ.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		BF7239ED8AFB4D88A451A56A /* SimpleLineIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = SimpleLineIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf"; sourceTree = "<group>"; };
		C0B7697626CC43B5B3A57654 /* Ionicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Ionicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf"; sourceTree = "<group>"; };
		C34E25A71E034CA4B2B46E6C /* FontAwesome.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf"; sourceTree = "<group>"; };
		DABD9298AEF953A255E15B48 /* Pods-InjuryIQ.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-InjuryIQ.release.xcconfig"; path = "Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ.release.xcconfig"; sourceTree = "<group>"; };
		E1F6EFCB172A453BB0F733F7 /* Zocial.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Zocial.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Zocial.ttf"; sourceTree = "<group>"; };
		EC08F7BC0CFA4058B20AF099 /* EvilIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = EvilIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf"; sourceTree = "<group>"; };
		F84BDC939F8C4FDEA8945BF3 /* MaterialIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			files = (
				D4085C910F877D8285EE7425 /* Pods_InjuryIQ.framework in Frameworks */,
			);
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		069DC4772E940D7C00EE9E1E /* ci_scripts */ = {
			isa = PBXGroup;
			children = (
				069DC4782E940DB800EE9E1E /* ci_pre_xcodebuild.sh */,
				069DC4792E94204E00EE9E1E /* ci_post_clone.sh */,
			);
			path = ci_scripts;
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* InjuryIQ */ = {
			isa = PBXGroup;
			children = (
				0650B5372E71842800DC2AD4 /* InjuryIQ.entitlements */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				761780EC2CA45674006654EE /* AppDelegate.swift */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				06AE9E2F2E686A9A00EE0892 /* GoogleService-Info.plist */,
				81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */,
				13B07FB81A68108700A75B9A /* PrivacyInfo.xcprivacy */,
			);
			name = InjuryIQ;
			sourceTree = "<group>";
		};
		1FF1F56A394DEA2C85F944C2 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				BDF01B1AB67DB8D5688BB75B /* Pods_InjuryIQ.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		64E0F1A945FE4AC6A266B622 /* Resources */ = {
			isa = PBXGroup;
			children = (
				23437A402186427F90448F71 /* AntDesign.ttf */,
				71B1F17B5A284FA2B89CE72B /* Entypo.ttf */,
				EC08F7BC0CFA4058B20AF099 /* EvilIcons.ttf */,
				2894D2E5AA0E4D838FF64477 /* Feather.ttf */,
				C34E25A71E034CA4B2B46E6C /* FontAwesome.ttf */,
				7FE4D937676241EEAD0D925F /* FontAwesome5_Brands.ttf */,
				81D4326968AB41F096AF8235 /* FontAwesome5_Regular.ttf */,
				67A368024CC24AA6BF75C97F /* FontAwesome5_Solid.ttf */,
				16707BBDA3F24A71BE50288D /* FontAwesome6_Brands.ttf */,
				05D456A85B204E82AB84B3A0 /* FontAwesome6_Regular.ttf */,
				55BF79578E304A26B1764A71 /* FontAwesome6_Solid.ttf */,
				5966DCF2F0ED4A48B17D592F /* Fontisto.ttf */,
				95737EA8F94D4E36820B8F5B /* Foundation.ttf */,
				C0B7697626CC43B5B3A57654 /* Ionicons.ttf */,
				1154A09F964A490B9E1E6AF5 /* MaterialCommunityIcons.ttf */,
				F84BDC939F8C4FDEA8945BF3 /* MaterialIcons.ttf */,
				BA7B476F4B84406A89CF2222 /* Octicons.ttf */,
				BF7239ED8AFB4D88A451A56A /* SimpleLineIcons.ttf */,
				E1F6EFCB172A453BB0F733F7 /* Zocial.ttf */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				069DC4772E940D7C00EE9E1E /* ci_scripts */,
				13B07FAE1A68108700A75B9A /* InjuryIQ */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				83CBBA001A601CBA00E9B192 /* Products */,
				BBD78D7AC51CEA395F1C20DB /* Pods */,
				64E0F1A945FE4AC6A266B622 /* Resources */,
				1FF1F56A394DEA2C85F944C2 /* Frameworks */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 1;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* InjuryIQ.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		BBD78D7AC51CEA395F1C20DB /* Pods */ = {
			isa = PBXGroup;
			children = (
				62294D02248885BB03499D75 /* Pods-InjuryIQ.debug.xcconfig */,
				DABD9298AEF953A255E15B48 /* Pods-InjuryIQ.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		13B07F861A680F5B00A75B9A /* InjuryIQ */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "InjuryIQ" */;
			buildPhases = (
				F2DDA7DF8FBAD1F032ACECA2 /* [CP] Check Pods Manifest.lock */,
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
				0605DE1E2E911AC600D72DFF /* Generate Hermes dSYM */,
				056778E79576D4A322757A37 /* [CP] Embed Pods Frameworks */,
				A3F1A9D8F6E49E30940C792E /* [CP] Copy Pods Resources */,
				0E761FBF353EE4331C5EFF08 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			name = InjuryIQ;
			productName = InjuryIQ;
			productReference = 13B07F961A680F5B00A75B9A /* InjuryIQ.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1210;
				TargetAttributes = {
					13B07F861A680F5B00A75B9A = {
						LastSwiftMigration = 1120;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "InjuryIQ" */;
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			preferredProjectObjectVersion = 90;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* InjuryIQ */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			files = (
				81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */,
				06AE9E302E686A9A00EE0892 /* GoogleService-Info.plist in Resources */,
				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
				3049B9996A8B50742998DF45 /* PrivacyInfo.xcprivacy in Resources */,
			);
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			shellPath = /bin/sh;
			shellScript = (
				"set -e",
				"",
				"WITH_ENVIRONMENT=\"$REACT_NATIVE_PATH/scripts/xcode/with-environment.sh\"",
				"REACT_NATIVE_XCODE=\"$REACT_NATIVE_PATH/scripts/react-native-xcode.sh\"",
				"",
				"/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"",
				"",
			);
		};
		056778E79576D4A322757A37 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			shellPath = /bin/sh;
			shellScript = (
				"\"${PODS_ROOT}/Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ-frameworks.sh\"",
				"",
			);
			showEnvVarsInLog = 0;
		};
		0605DE1E2E911AC600D72DFF /* Generate Hermes dSYM */ = {
			isa = PBXShellScriptBuildPhase;
			name = "Generate Hermes dSYM";
			shellPath = /bin/sh;
			shellScript = (
				"set -euo pipefail",
				"",
				"HERMES_BIN=\"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/hermes.framework/hermes\"",
				"DST_DSYM_DIR=\"${DWARF_DSYM_FOLDER_PATH}\"",
				"ARCHIVE_DSYMS=\"${ARCHIVE_DSYMS_PATH:-${DWARF_DSYM_FOLDER_PATH}}\"",
				"",
				"if [ -f \"$HERMES_BIN\" ]; then",
				"  echo \"Generating dSYM for Hermes…\"",
				"  /usr/bin/dsymutil -o \"${DST_DSYM_DIR}/hermes.framework.dSYM\" \"$HERMES_BIN\" || true",
				"",
				"  # Some Xcode versions look only in the archive’s dSYMs folder:",
				"  if [ -d \"$ARCHIVE_DSYMS\" ] && [ ! -d \"${ARCHIVE_DSYMS}/hermes.framework.dSYM\" ]; then",
				"    cp -R \"${DST_DSYM_DIR}/hermes.framework.dSYM\" \"${ARCHIVE_DSYMS}/\"",
				"  fi",
				"",
				"  echo \"Hermes dSYM UUID(s):\"",
				"  /usr/bin/dwarfdump --uuid \"${DST_DSYM_DIR}/hermes.framework.dSYM\" || true",
				"fi",
				"",
			);
		};
		0E761FBF353EE4331C5EFF08 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			inputPaths = (
				"$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)",
			);
			name = "[CP-User] [RNFB] Core Configuration";
			shellPath = /bin/sh;
			shellScript = (
				"#!/usr/bin/env bash",
				"#",
				"# Copyright (c) 2016-present Invertase Limited & Contributors",
				"#",
				"# Licensed under the Apache License, Version 2.0 (the \"License\");",
				"# you may not use this library except in compliance with the License.",
				"# You may obtain a copy of the License at",
				"#",
				"#   http://www.apache.org/licenses/LICENSE-2.0",
				"#",
				"# Unless required by applicable law or agreed to in writing, software",
				"# distributed under the License is distributed on an \"AS IS\" BASIS,",
				"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
				"# See the License for the specific language governing permissions and",
				"# limitations under the License.",
				"#",
				"",
				"##########################################################################",
				"##########################################################################",
				"#",
				"#  NOTE THAT IF YOU CHANGE THIS FILE YOU MUST RUN pod install AFTERWARDS",
				"#",
				"#  This file is installed as an Xcode build script in the project file",
				"#  by cocoapods, and you will not see your changes until you pod install",
				"#",
				"##########################################################################",
				"##########################################################################",
				"",
				"set -e",
				"",
				"_MAX_LOOKUPS=2;",
				"_SEARCH_RESULT=''",
				"_RN_ROOT_EXISTS=''",
				"_CURRENT_LOOKUPS=1",
				"_JSON_ROOT=\"'react-native'\"",
				"_JSON_FILE_NAME='firebase.json'",
				"_JSON_OUTPUT_BASE64='e30=' # { }",
				"_CURRENT_SEARCH_DIR=${PROJECT_DIR}",
				"_PLIST_BUDDY=/usr/libexec/PlistBuddy",
				"_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"",
				"_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"",
				"",
				"# plist arrays",
				"_PLIST_ENTRY_KEYS=()",
				"_PLIST_ENTRY_TYPES=()",
				"_PLIST_ENTRY_VALUES=()",
				"",
				"function setPlistValue {",
				"  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"",
				"  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"",
				"}",
				"",
				"function getFirebaseJsonKeyValue () {",
				"  if [[ ${_RN_ROOT_EXISTS} ]]; then",
				"    ruby -Ku -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"",
				"  else",
				"    echo \"\"",
				"  fi;",
				"}",
				"",
				"function jsonBoolToYesNo () {",
				"  if [[ $1 == \"false\" ]]; then",
				"    echo \"NO\"",
				"  elif [[ $1 == \"true\" ]]; then",
				"    echo \"YES\"",
				"  else echo \"NO\"",
				"  fi",
				"}",
				"",
				"echo \"info: -> RNFB build script started\"",
				"echo \"info: 1) Locating ${_JSON_FILE_NAME} file:\"",
				"",
				"if [[ -z ${_CURRENT_SEARCH_DIR} ]]; then",
				"  _CURRENT_SEARCH_DIR=$(pwd)",
				"fi;",
				"",
				"while true; do",
				"  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")",
				"  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;",
				"  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"",
				"  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | /usr/bin/head -n 1)",
				"  if [[ ${_SEARCH_RESULT} ]]; then",
				"    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"",
				"    break;",
				"  fi;",
				"  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))",
				"done",
				"",
				"if [[ ${_SEARCH_RESULT} ]]; then",
				"  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")",
				"  if ! _RN_ROOT_EXISTS=$(ruby -Ku -e \"require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\"); then",
				"    echo \"error: Failed to parse firebase.json, check for syntax errors.\"",
				"    exit 1",
				"  fi",
				"",
				"  if [[ ${_RN_ROOT_EXISTS} ]]; then",
				"    if ! python3 --version >/dev/null 2>&1; then echo \"python3 not found, firebase.json file processing error.\" && exit 1; fi",
				"    _JSON_OUTPUT_BASE64=$(python3 -c 'import json,sys,base64;print(base64.b64encode(bytes(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"', '\"'rb'\"').read())['${_JSON_ROOT}']), '\"'utf-8'\"')).decode())' || echo \"e30=\")",
				"  fi",
				"",
				"  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")",
				"  _PLIST_ENTRY_TYPES+=(\"string\")",
				"  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")",
				"",
				"  # config.app_data_collection_default_enabled",
				"  _APP_DATA_COLLECTION_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_data_collection_default_enabled\")",
				"  if [[ $_APP_DATA_COLLECTION_ENABLED ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"FirebaseDataCollectionDefaultEnabled\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_DATA_COLLECTION_ENABLED\")\")",
				"  fi",
				"",
				"  # config.analytics_auto_collection_enabled",
				"  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")",
				"  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")",
				"  fi",
				"",
				"  # config.analytics_collection_deactivated",
				"  _ANALYTICS_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_collection_deactivated\")",
				"  if [[ $_ANALYTICS_DEACTIVATED ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_DEACTIVATED\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_DEACTIVATED\")\")",
				"  fi",
				"",
				"  # config.analytics_idfv_collection_enabled",
				"  _ANALYTICS_IDFV_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_idfv_collection_enabled\")",
				"  if [[ $_ANALYTICS_IDFV_COLLECTION ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_IDFV_COLLECTION_ENABLED\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_IDFV_COLLECTION\")\")",
				"  fi",
				"",
				"  # config.analytics_default_allow_analytics_storage",
				"  _ANALYTICS_STORAGE=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_analytics_storage\")",
				"  if [[ $_ANALYTICS_STORAGE ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_ANALYTICS_STORAGE\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_STORAGE\")\")",
				"  fi",
				"",
				"  # config.analytics_default_allow_ad_storage",
				"  _ANALYTICS_AD_STORAGE=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_storage\")",
				"  if [[ $_ANALYTICS_AD_STORAGE ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_STORAGE\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AD_STORAGE\")\")",
				"  fi",
				"",
				"  # config.analytics_default_allow_ad_user_data",
				"  _ANALYTICS_AD_USER_DATA=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_user_data\")",
				"  if [[ $_ANALYTICS_AD_USER_DATA ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_USER_DATA\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AD_USER_DATA\")\")",
				"  fi",
				"",
				"  # config.analytics_default_allow_ad_personalization_signals",
				"  _ANALYTICS_PERSONALIZATION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_personalization_signals\")",
				"  if [[ $_ANALYTICS_PERSONALIZATION ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_PERSONALIZATION_SIGNALS\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_PERSONALIZATION\")\")",
				"  fi",
				"",
				"  # config.analytics_registration_with_ad_network_enabled",
				"  _ANALYTICS_REGISTRATION_WITH_AD_NETWORK=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_registration_with_ad_network_enabled\")",
				"  if [[ $_ANALYTICS_REGISTRATION_WITH_AD_NETWORK ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_REGISTRATION_WITH_AD_NETWORK_ENABLED\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_REGISTRATION_WITH_AD_NETWORK\")\")",
				"  fi",
				"",
				"  # config.google_analytics_automatic_screen_reporting_enabled",
				"  _ANALYTICS_AUTO_SCREEN_REPORTING=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_automatic_screen_reporting_enabled\")",
				"  if [[ $_ANALYTICS_AUTO_SCREEN_REPORTING ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"FirebaseAutomaticScreenReportingEnabled\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_SCREEN_REPORTING\")\")",
				"  fi",
				"",
				"  # config.perf_auto_collection_enabled",
				"  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")",
				"  if [[ $_PERF_AUTO_COLLECTION ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")",
				"  fi",
				"",
				"  # config.perf_collection_deactivated",
				"  _PERF_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_collection_deactivated\")",
				"  if [[ $_PERF_DEACTIVATED ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_deactivated\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_DEACTIVATED\")\")",
				"  fi",
				"",
				"  # config.messaging_auto_init_enabled",
				"  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")",
				"  if [[ $_MESSAGING_AUTO_INIT ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")",
				"  fi",
				"",
				"  # config.in_app_messaging_auto_colllection_enabled",
				"  _FIAM_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"in_app_messaging_auto_collection_enabled\")",
				"  if [[ $_FIAM_AUTO_INIT ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"FirebaseInAppMessagingAutomaticDataCollectionEnabled\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_FIAM_AUTO_INIT\")\")",
				"  fi",
				"",
				"  # config.app_check_token_auto_refresh",
				"  _APP_CHECK_TOKEN_AUTO_REFRESH=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_check_token_auto_refresh\")",
				"  if [[ $_APP_CHECK_TOKEN_AUTO_REFRESH ]]; then",
				"    _PLIST_ENTRY_KEYS+=(\"FirebaseAppCheckTokenAutoRefreshEnabled\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_CHECK_TOKEN_AUTO_REFRESH\")\")",
				"  fi",
				"",
				"  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful",
				"  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")",
				"  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then",
				"    echo \"Disabled Crashlytics auto disabler.\" # do nothing",
				"  else",
				"    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")",
				"    _PLIST_ENTRY_TYPES+=(\"bool\")",
				"    _PLIST_ENTRY_VALUES+=(\"NO\")",
				"  fi",
				"else",
				"  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")",
				"  _PLIST_ENTRY_TYPES+=(\"string\")",
				"  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")",
				"  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"",
				"fi;",
				"",
				"echo \"info: 2) Injecting Info.plist entries: \"",
				"",
				"# Log out the keys we're adding",
				"for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do",
				"  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"",
				"done",
				"",
				"for plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do",
				"  if [[ -f \"${plist}\" ]]; then",
				"",
				"    # paths with spaces break the call to setPlistValue. temporarily modify",
				"    # the shell internal field separator variable (IFS), which normally",
				"    # includes spaces, to consist only of line breaks",
				"    oldifs=$IFS",
				"    IFS=\"",
				"\"",
				"",
				"    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do",
				"      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"",
				"    done",
				"",
				"    # restore the original internal field separator value",
				"    IFS=$oldifs",
				"  else",
				"    echo \"warning:   A Info.plist build output file was not found (${plist})\"",
				"  fi",
				"done",
				"",
				"echo \"info: <- RNFB build script finished\"",
				"",
			);
		};
		A3F1A9D8F6E49E30940C792E /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			shellPath = /bin/sh;
			shellScript = (
				"\"${PODS_ROOT}/Target Support Files/Pods-InjuryIQ/Pods-InjuryIQ-resources.sh\"",
				"",
			);
			showEnvVarsInLog = 0;
		};
		F2DDA7DF8FBAD1F032ACECA2 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-InjuryIQ-checkManifestLockResult.txt",
			);
			shellPath = /bin/sh;
			shellScript = (
				"diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null",
				"if [ $? != 0 ] ; then",
				"    # print error to STDERR",
				"    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2",
				"    exit 1",
				"fi",
				"# This output is used by Xcode 'outputs' to avoid re-running this script phase.",
				"echo \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"",
				"",
			);
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			files = (
				761780ED2CA45674006654EE /* AppDelegate.swift in Sources */,
			);
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		13B07F941A680F5B00A75B9A /* Debug configuration for PBXNativeTarget "InjuryIQ" */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 62294D02248885BB03499D75 /* Pods-InjuryIQ.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = InjuryIQ/InjuryIQ.entitlements;
				CURRENT_PROJECT_VERSION = 2;
				DEVELOPMENT_TEAM = KS86K6AD9K;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = InjuryIQ/Info.plist;
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.healthcare-fitness";
				IPHONEOS_DEPLOYMENT_TARGET = 16.6;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.InjuryIQ;
				PRODUCT_NAME = InjuryIQ;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release configuration for PBXNativeTarget "InjuryIQ" */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = DABD9298AEF953A255E15B48 /* Pods-InjuryIQ.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = InjuryIQ/InjuryIQ.entitlements;
				CURRENT_PROJECT_VERSION = 2;
				DEVELOPMENT_TEAM = KS86K6AD9K;
				INFOPLIST_FILE = InjuryIQ/Info.plist;
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.healthcare-fitness";
				IPHONEOS_DEPLOYMENT_TARGET = 16.6;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 1.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.InjuryIQ;
				PRODUCT_NAME = InjuryIQ;
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug configuration for PBXProject "InjuryIQ" */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++20";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = "";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-runtimeexecutor/React_runtimeexecutor.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-runtimeexecutor/React_runtimeexecutor.framework/Headers/platform/ios",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers/platform/ios",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers/react/renderer/components/view/platform/cxx",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-NativeModulesApple/React_NativeModulesApple.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios",
				);
				IPHONEOS_DEPLOYMENT_TARGET = 15.1;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"\"$(SDKROOT)/usr/lib/swift\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_CPLUSPLUSFLAGS = (
					"$(OTHER_CFLAGS)",
					"-DFOLLY_NO_CONFIG",
					"-DFOLLY_MOBILE=1",
					"-DFOLLY_USE_LIBCPP=1",
					"-DFOLLY_CFG_NO_COROUTINES=1",
					"-DFOLLY_HAVE_CLOCK_GETTIME=1",
				);
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) DEBUG";
				USE_HERMES = true;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release configuration for PBXProject "InjuryIQ" */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++20";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = "";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers/react/nativemodule/core",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-runtimeexecutor/React_runtimeexecutor.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-runtimeexecutor/React_runtimeexecutor.framework/Headers/platform/ios",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon-Samples/ReactCommon_Samples.framework/Headers/platform/ios",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-Fabric/React_Fabric.framework/Headers/react/renderer/components/view/platform/cxx",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-NativeModulesApple/React_NativeModulesApple.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers",
					"${PODS_CONFIGURATION_BUILD_DIR}/React-graphics/React_graphics.framework/Headers/react/renderer/graphics/platform/ios",
				);
				IPHONEOS_DEPLOYMENT_TARGET = 15.1;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"\"$(SDKROOT)/usr/lib/swift\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = NO;
				OTHER_CPLUSPLUSFLAGS = (
					"$(OTHER_CFLAGS)",
					"-DFOLLY_NO_CONFIG",
					"-DFOLLY_MOBILE=1",
					"-DFOLLY_USE_LIBCPP=1",
					"-DFOLLY_CFG_NO_COROUTINES=1",
					"-DFOLLY_HAVE_CLOCK_GETTIME=1",
				);
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
				USE_HERMES = true;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "InjuryIQ" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug configuration for PBXNativeTarget "InjuryIQ" */,
				13B07F951A680F5B00A75B9A /* Release configuration for PBXNativeTarget "InjuryIQ" */,
			);
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "InjuryIQ" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug configuration for PBXProject "InjuryIQ" */,
				83CBBA211A601CBA00E9B192 /* Release configuration for PBXProject "InjuryIQ" */,
			);
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
